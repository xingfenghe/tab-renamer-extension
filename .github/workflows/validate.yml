name: Validate Extension

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate manifest.json
      run: |
        # Check if manifest.json is valid JSON
        python -m json.tool manifest.json > /dev/null
        echo "✅ manifest.json is valid JSON"
        
        # Check required fields
        if ! grep -q '"manifest_version": 3' manifest.json; then
          echo "❌ manifest_version must be 3"
          exit 1
        fi
        
        if ! grep -q '"name":' manifest.json; then
          echo "❌ name field is required"
          exit 1
        fi
        
        if ! grep -q '"version":' manifest.json; then
          echo "❌ version field is required"
          exit 1
        fi
        
        echo "✅ Required manifest fields present"
    
    - name: Check file structure
      run: |
        # Check required files exist
        required_files=("manifest.json" "background.js" "popup.html" "popup.js" "icon.png")
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Required file missing: $file"
            exit 1
          fi
        done
        
        echo "✅ All required files present"
    
    - name: Validate HTML
      run: |
        # Basic HTML validation
        if ! grep -q '<!DOCTYPE html>' popup.html; then
          echo "❌ popup.html missing DOCTYPE"
          exit 1
        fi
        
        if ! grep -q '<html>' popup.html; then
          echo "❌ popup.html missing html tag"
          exit 1
        fi
        
        echo "✅ popup.html structure valid"
    
    - name: Check JavaScript syntax
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Node.js for syntax check
      run: |
        # Check JavaScript syntax
        node -c background.js
        node -c popup.js
        echo "✅ JavaScript syntax valid"
    
    - name: Validate permissions
      run: |
        # Check for reasonable permissions
        if grep -q '"permissions"' manifest.json; then
          echo "✅ Permissions declared"
        else
          echo "❌ No permissions declared"
          exit 1
        fi
        
        # Check for host permissions
        if grep -q '"host_permissions"' manifest.json; then
          echo "✅ Host permissions declared"
        else
          echo "⚠️ No host permissions declared"
        fi
    
    - name: Check documentation
      run: |
        # Check documentation files
        docs=("README.md" "LICENSE" "CONTRIBUTING.md")
        
        for doc in "${docs[@]}"; do
          if [ ! -f "$doc" ]; then
            echo "❌ Documentation missing: $doc"
            exit 1
          fi
        done
        
        echo "✅ Documentation complete"